[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core",
]

[tool.poetry]
name = "sneakers-ml"
version = "0.1.1"
description = ""
authors = [
  "MIEM",
]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
# top libs
numpy = "^2.0.1"
pandas = "^2.2.2"
scipy = "^1.13.0"
# onnx stuff
onnxscript = "^0.1.0.dev20240729"
onnxruntime = "^1.17.3"
onnx = "^1.15.0"
skl2onnx = "^1.16.0"
# ml libs
catboost = "^1.2.5"
scikit-learn = "^1.5.1"
scikit-image = "^0.24.0"
opencv-python = "^4.10.0.84"
pillow = "^10.4.0"
# torch stuff
torch = "^2.1.1"
torchvision = "^0.16.1"
torcheval = "^0.0.7"
lightning = "^2.3.3"
#transformers
datasets = "^2.19.2"
transformers = "^4.43.3"
accelerate = "^0.31.0"
evaluate = "^0.4.2"
# configs and logging
wandb = "^0.17.5"
hydra-core = "^1.3.2"
loguru = "^0.7.2"
qdrant-client = "^1.10.1"

[tool.poetry.group.data-eda]
optional = true

[tool.poetry.group.data-eda.dependencies]
# jupyter
ipywidgets = "^8.1.1"
jupyterlab = "^4.2.4"
# parsing stuff
algoliasearch = "^3.0.0"
beautifulsoup4 = "^4.12.2"
fake-useragent = "^1.4.0"
requests = "^2.32.0"
# data cleaning
split-folders = "^0.5.1"
pandarallel = "^1.6.5"
tqdm = "^4.66.3"
# visualizations
matplotlib = "^3.9.1"
seaborn = "^0.13.0"
umap-learn = "^0.5.6"

[tool.poetry.group.bot]
optional = true

[tool.poetry.group.bot.dependencies]
aiohttp = "^3.9.5"
python-telegram-bot = "^21.4"
loguru = "^0.7.2"

[tool.poetry.group.api]
optional = true

[tool.poetry.group.api.dependencies]
boto3 = "^1.34.149"
fastapi = "^0.111.1"
pydantic = "^2.8.2"
pydantic-settings = "^2.3.4"
python-multipart = "^0.0.9"
redis = "^5.0.7"
uvicorn = "^0.30.3"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
pytest-asyncio = "^0.23.8"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
# do not add DVC to poetry, it is too slow
# linting and formatting
pre-commit = "^3.8.0"
# for vscode
isort = "^5.13.2"
black = "^24.4.2"
flake8 = "^7.0.0"
flake8-bugbear = "^24.4.26"
flake8-simplify = "^0.21.0"
flake8-pyproject = "^1.2.3"
ruff = "^0.5.5"
mypy = "^1.11.0"
pylint = "^3.2.6"
# stubs for mypy type checking and code completions
typing-extensions = "^4.12.1"
pandas-stubs = "^2.2.1.240316"
types-pillow = "^10.2.0.20240423"
types-beautifulsoup4 = "^4.12.0.20240229"
types-tqdm = "^4.66.0.20240417"
types-seaborn = "^0.13.2.20240417"

[tool.black]
line-length = 120
target-version = [
  "py39",
]
# skip-magic-trailing-comma = true

[tool.ruff]
target-version = "py39"
line-length = 120
extend-include = [
  "*.ipynb",
]

lint.select = [
  "ALL",
]
lint.ignore = [
  "ANN101",  # annotationg self in class methods, will be deprecated
  "ANN102",  # annotationg cls in class methods, will be deprecated
  "COM812",  # missing-trailing-comma
  "D",       # documentation
  "FA100",   # future-annotations
  "NPY002",  # numpy random stuff
  "PLR0913", # too many init arguments
  "RUF012",  # mutable class attributes type checking
  "T201",    # print statements
]

[tool.isort]
profile = "black"
line_length = 120
float_to_top = true
known_third_party = [
  "wandb",
]

[tool.flake8]
max-line-length = 120
extend-ignore = "E203" # Whitespace before ':' for black compatability

[tool.pylint]
py-version = "3.9"
max-line-length = 120
disable = [
  "C0116", # documentation
  "C0114", # documentation
  "C0115", # documentation
]

[tool.pytest]
addopts = [
  "--ignore=data",
  "--ignore=notebooks",
  "--ignore=notes",
  "--ignore=docker",
]

[tool.mypy]
python_version = "3.9"
strict = true
show_error_context = true
pretty = true
ignore_missing_imports = true # ignore packages without type-checking

[tool.autoflake]
expand-star-imports = true
remove-all-unused-imports = true
ignore-init-module-imports = true
remove-duplicate-keys = true
remove-unused-variables = true
recursive = true
in-place = true

[tool.bandit]
exclude_dirs = [
  "sneakers_ml/data/test",
]

[tool.bandit.assert_used]
skips = [
  '*_test.py',
  '*/test_*.py',
]
